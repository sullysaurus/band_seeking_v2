<div class="min-h-screen flex items-center justify-center bg-gray-100">
  <div class="bg-white p-8 shadow-lg rounded-lg w-full max-w-md">
    
    <!-- Title -->
    <h2 class="text-2xl font-bold text-center text-gray-800 mb-6">Create an Account</h2>

    <!-- Devise Error Messages -->
    <% if resource.errors.any? %>
      <div class="bg-red-100 text-red-700 p-4 rounded-md mb-4">
        <strong>Oops! Something went wrong:</strong>
        <ul class="list-disc list-inside">
          <% resource.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <!-- Sign-Up Form -->
    <%= form_with model: resource, url: registration_path(resource_name), local: true, class: "space-y-4" do |f| %>

      <div>
        <%= f.label :username, class: "block text-gray-700 font-medium" %>
        <%= f.text_field :username, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
      </div>

      <div>
        <%= f.label :email, class: "block text-gray-700 font-medium" %>
        <%= f.email_field :email, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
      </div>

      <div>
        <%= f.label :password, class: "block text-gray-700 font-medium" %>
        <%= f.password_field :password, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
      </div>

      <div>
        <%= f.label :password_confirmation, class: "block text-gray-700 font-medium" %>
        <%= f.password_field :password_confirmation, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
      </div>

      <!-- Profile Fields -->
      <%= f.fields_for :profile, (resource.profile || resource.build_profile) do |p| %>
        <div>
          <%= p.label :zip_code, "ZIP Code", class: "block text-gray-700 font-medium" %>
          <div class="flex">
            <%= p.text_field :zip_code, placeholder: "Enter ZIP code", class: "w-full p-3 border border-gray-300 rounded-l-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
            <button type="button" class="auto-location-btn p-3 bg-gray-200 border border-l-0 border-gray-300 rounded-r-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="getLocation()">Use My Location</button>
          </div>
        </div>
      <% end %>

      <div>
        <%= f.submit "Sign Up", class: "w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 rounded-md transition duration-300" %>
      </div>

    <% end %>

    <!-- Sign In Link -->
    <p class="text-gray-600 text-sm text-center mt-4">
      Already have an account? 
      <%= link_to "Sign in", new_user_session_path, class: "text-blue-600 hover:underline" %>
    </p>

  </div>
</div>

<script>
function getLocation() {
  const button = document.querySelector('.auto-location-btn');
  button.disabled = true;
  button.textContent = 'Getting location...';

  // Retrieve the API key from the environment
  const googleMapsApiKey = '<%= ENV["GOOGLE_MAPS_API_KEY"] %>';
  
  if ("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(async (position) => {
      const { latitude, longitude } = position.coords;
      try {
        const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${googleMapsApiKey}`);
        const data = await response.json();
        const zipCodeComponent = data.results[0].address_components.find(component => component.types.includes('postal_code'));
        if (zipCodeComponent) {
          document.querySelector('input[name="user[profile_attributes][zip_code]"]').value = zipCodeComponent.long_name;
        }
      } catch (error) {
        console.error("Error getting location:", error);
        alert("Could not automatically determine your ZIP code. Please enter it manually.");
      }
      button.disabled = false;
      button.textContent = 'Use My Location';
    }, (error) => {
      console.error("Geolocation error:", error);
      alert("Error obtaining your location. Please enter your ZIP code manually.");
      button.disabled = false;
      button.textContent = 'Use My Location';
    });
  } else {
    alert("Geolocation is not supported by your browser. Please enter your ZIP code manually.");
    button.disabled = false;
    button.textContent = 'Use My Location';
  }
}
</script>
